

 80%|██████████████████████████████████████████████████████████████████████████████████████████████████▌                        | 12000/14970 [00:18<00:00, 9411.23it/s]































































































































































































 83%|████████████████████████████████████████████████████████████████████████████████████████████████████████▎                    | 12499/14970 [06:47<31:19,  1.31it/s]































































































































































































 87%|████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                | 12998/14970 [13:16<24:46,  1.33it/s]



















































































 88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 13217/14970 [16:12<22:12,  1.32it/s]Traceback (most recent call last):
  File "train.py", line 378, in <module>
    main()
  File "train.py", line 109, in main
    run_mrc(data_args, training_args, model_args, datasets, tokenizer, model)
  File "train.py", line 343, in run_mrc
    train_result = trainer.train(resume_from_checkpoint=checkpoint)
  File "/opt/conda/lib/python3.8/site-packages/transformers/trainer.py", line 1120, in train
    tr_loss += self.training_step(model, inputs)
  File "/opt/conda/lib/python3.8/site-packages/transformers/trainer.py", line 1524, in training_step
    loss = self.compute_loss(model, inputs)
  File "/opt/conda/lib/python3.8/site-packages/transformers/trainer.py", line 1556, in compute_loss
    outputs = model(**inputs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/transformers/models/roberta/modeling_roberta.py", line 1445, in forward
    outputs = self.roberta(
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/transformers/models/roberta/modeling_roberta.py", line 815, in forward
    encoder_outputs = self.encoder(
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/transformers/models/roberta/modeling_roberta.py", line 508, in forward
    layer_outputs = layer_module(
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/transformers/models/roberta/modeling_roberta.py", line 395, in forward
    self_attention_outputs = self.attention(
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/transformers/models/roberta/modeling_roberta.py", line 323, in forward
    self_outputs = self.self(
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/transformers/models/roberta/modeling_roberta.py", line 209, in forward
    key_layer = self.transpose_for_scores(self.key(hidden_states))
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 765, in __getattr__
    def __getattr__(self, name: str) -> Union[Tensor, 'Module']:
KeyboardInterrupt